# Build image
FROM golang:1.16-alpine AS build-env
WORKDIR /root/

# Download mods here to be cached
COPY go.mod ./
COPY go.sum ./
RUN go mod download

COPY ./ ./
RUN apk update \
  && apk add git \
  && cd ./cmd/scaler \
  && CGO_ENABLED=0 GOOS=linux go build -a -ldflags "-X github.com/gamedb/gamedb/pkg/ldflags.CommitHash=`git rev-parse --verify HEAD` -X github.com/gamedb/gamedb/pkg/ldflags.CommitCount=`git rev-list --count master`"

# Runtime image
FROM alpine:3.12 AS runtime-env
WORKDIR /root/
COPY --from=build-env /root/cmd/scaler/scaler ./
COPY ./cmd/scaler/list.gohtml ./list.gohtml
COPY ./cmd/scaler/health-check.sh ./health-check.sh
RUN chmod +x health-check.sh \
  && apk update \
  && apk add ca-certificates curl bash
CMD ["./scaler"]
HEALTHCHECK --interval=60s --timeout=10s --start-period=30s --retries=2 CMD ./health-check.sh
