# Build image
FROM golang:1.13-alpine AS build-env
WORKDIR /root/

# Download mods here to be cached
COPY go.mod ./
COPY go.sum ./
RUN go mod download

COPY ./ ./
RUN apk update && apk add git
RUN go get -u github.com/gobuffalo/packr/v2/packr2
RUN cd ./cmd/webserver && CGO_ENABLED=0 GOOS=linux packr2 build -a -ldflags "-X main.version=`git rev-parse --verify HEAD`"

# Runtime image
FROM alpine:3.11 AS runtime-env
WORKDIR /root/
COPY --from=build-env /root/cmd/webserver/webserver ./
COPY ./cmd/webserver/assets/GeoLite2-Country.mmdb ./assets/GeoLite2-Country.mmdb
COPY ./cmd/webserver/health-check.sh ./health-check.sh
RUN ["chmod", "+x", "health-check.sh"]
RUN touch ./google-auth.json
RUN apk update && apk add ca-certificates curl bash tzdata
CMD ["./webserver"]
HEALTHCHECK --interval=60s --timeout=10s --start-period=30s --retries=2 CMD ./health-check.sh
