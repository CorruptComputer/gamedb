package helpers

import (
	"sort"
	"strings"

	"github.com/Jleagle/steam-go/steam"
	"github.com/dustin/go-humanize"
	"github.com/gamedb/gamedb/pkg/log"
	"github.com/pariz/gountries"
	"golang.org/x/text/currency"
	"golang.org/x/text/language"
	"golang.org/x/text/message"
)

var gountriesInstance = gountries.New()

type ProductCountryCode struct {
	ProductCode  steam.ProductCC
	CurrencyCode steam.CurrencyCode
	CountryCodes []string // Used to get a currency from an country from an IP
	Name         string
	Symbol       string
	Enabled      bool
}

func (pcc ProductCountryCode) GetFlag() string {
	switch pcc.ProductCode {
	case steam.ProductCCEU:
		return "eu"
	case steam.ProductCCUK:
		return "gb"
	case steam.ProductCCAZ:
		return "cis"
	case steam.ProductCCPK:
		return "sasia"
	default:
		return strings.ToLower(pcc.CountryCodes[0])
	}
}

var ProductCountryCodes = map[steam.ProductCC]ProductCountryCode{
	steam.ProductCCAR: {
		ProductCode:  steam.ProductCCAR,
		CountryCodes: []string{"AR"},
		CurrencyCode: steam.CurrencyARS,
		Name:         "Argentine Peso",
		Symbol:       "ARS$",
	},
	steam.ProductCCAU: {
		ProductCode:  steam.ProductCCAU,
		CountryCodes: []string{"AU"},
		CurrencyCode: steam.CurrencyAUD,
		Name:         "Australian Dollar",
		Symbol:       "A$",
	},
	steam.ProductCCBR: {
		ProductCode:  steam.ProductCCBR,
		CountryCodes: []string{"BR"},
		CurrencyCode: steam.CurrencyBRL,
		Name:         "Brazilian Real",
		Symbol:       "R$",
	},
	steam.ProductCCCA: {
		ProductCode:  steam.ProductCCCA,
		CountryCodes: []string{"CA"},
		CurrencyCode: steam.CurrencyCAD,
		Name:         "Canadian Dollar",
		Symbol:       "CDN$",
	},
	steam.ProductCCCL: {
		ProductCode:  steam.ProductCCCL,
		CountryCodes: []string{"CL"},
		CurrencyCode: steam.CurrencyCLP,
		Name:         "Chilean Peso",
		Symbol:       "CLP$",
	},
	steam.ProductCCCN: {
		ProductCode:  steam.ProductCCCN,
		CountryCodes: []string{"CN"},
		CurrencyCode: steam.CurrencyCNY,
		Name:         "Chinese Renminbi",
		Symbol:       "¥",
		Enabled:      true,
	},
	steam.ProductCCCO: {
		ProductCode:  steam.ProductCCCO,
		CountryCodes: []string{"CO"},
		CurrencyCode: steam.CurrencyCOP,
		Name:         "Colombian Peso",
		Symbol:       "COL$",
	},
	steam.ProductCCCR: {
		ProductCode:  steam.ProductCCCR,
		CountryCodes: []string{"CR"},
		CurrencyCode: steam.CurrencyCRC,
		Name:         "Costa Rican Colon",
		Symbol:       "₡",
	},
	steam.ProductCCEU: { // European Union
		ProductCode:  steam.ProductCCEU,
		CountryCodes: []string{"AT", "BE", "BG", "HR", "CY", "CZ", "DK", "EE", "FI", "FR", "DE", "EL", "HU", "IE", "IT", "LV", "LT", "LU", "MT", "NL", "PL", "PT", "RO", "SK", "SI", "ES", "SE"},
		CurrencyCode: steam.CurrencyEUR,
		Name:         "Euro",
		Symbol:       "€",
		Enabled:      true,
	},
	steam.ProductCCHK: {
		ProductCode:  steam.ProductCCHK,
		CountryCodes: []string{"HK"},
		CurrencyCode: steam.CurrencyHKD,
		Name:         "Hong Kong Dollar",
		Symbol:       "HK$",
	},
	steam.ProductCCIN: {
		ProductCode:  steam.ProductCCIN,
		CountryCodes: []string{"IN"},
		CurrencyCode: steam.CurrencyINR,
		Name:         "Indian Rupee",
		Symbol:       "₹",
	},
	steam.ProductCCID: {
		ProductCode:  steam.ProductCCID,
		CountryCodes: []string{"ID"},
		CurrencyCode: steam.CurrencyIDR,
		Name:         "Indonesian Rupiah",
		Symbol:       "Rp",
	},
	steam.ProductCCIL: {
		ProductCode:  steam.ProductCCIL,
		CountryCodes: []string{"IL"},
		CurrencyCode: steam.CurrencyILS,
		Name:         "Israeli New Shekel",
		Symbol:       "₪",
	},
	steam.ProductCCJP: {
		ProductCode:  steam.ProductCCJP,
		CountryCodes: []string{"JP"},
		CurrencyCode: steam.CurrencyJPY,
		Name:         "Japanese Yen",
		Symbol:       "¥",
	},
	steam.ProductCCKZ: {
		ProductCode:  steam.ProductCCKZ,
		CountryCodes: []string{"KZ"},
		CurrencyCode: steam.CurrencyKZT,
		Name:         "Kazakhstani Tenge",
		Symbol:       "₸",
	},
	steam.ProductCCKW: {
		ProductCode:  steam.ProductCCKW,
		CountryCodes: []string{"KW"},
		CurrencyCode: steam.CurrencyKWD,
		Name:         "Kuwaiti Dinar",
		Symbol:       "KD",
	},
	steam.ProductCCMY: {
		ProductCode:  steam.ProductCCMY,
		CountryCodes: []string{"MY"},
		CurrencyCode: steam.CurrencyMYR,
		Name:         "Malaysian Ringgit",
		Symbol:       "RM",
	},
	steam.ProductCCMX: {
		ProductCode:  steam.ProductCCMX,
		CountryCodes: []string{"MX"},
		CurrencyCode: steam.CurrencyMXN,
		Name:         "Mexican Peso",
		Symbol:       "Mex$",
	},
	steam.ProductCCTW: {
		ProductCode:  steam.ProductCCTW,
		CountryCodes: []string{"TW"},
		CurrencyCode: steam.CurrencyTWD,
		Name:         "New Taiwan Dollar",
		Symbol:       "NT$",
	},
	steam.ProductCCNZ: {
		ProductCode:  steam.ProductCCNZ,
		CountryCodes: []string{"NZ"},
		CurrencyCode: steam.CurrencyNZD,
		Name:         "New Zealand Dollar",
		Symbol:       "NZ$",
	},
	steam.ProductCCNO: {
		ProductCode:  steam.ProductCCNO,
		CountryCodes: []string{"NO"},
		CurrencyCode: steam.CurrencyNOK,
		Name:         "Norwegian Krone",
		Symbol:       "kr",
	},
	steam.ProductCCPE: {
		ProductCode:  steam.ProductCCPE,
		CountryCodes: []string{"PE"},
		CurrencyCode: steam.CurrencyPEN,
		Name:         "Peruvian Sol",
		Symbol:       "S/",
	},
	steam.ProductCCPH: {
		ProductCode:  steam.ProductCCPH,
		CountryCodes: []string{"PH"},
		CurrencyCode: steam.CurrencyPHP,
		Name:         "Philippine Peso",
		Symbol:       "₱",
	},
	steam.ProductCCPL: {
		ProductCode:  steam.ProductCCPL,
		CountryCodes: []string{"PL"},
		CurrencyCode: steam.CurrencyPLN,
		Name:         "Polish Zloty",
		Symbol:       "zł",
	},
	steam.ProductCCUK: {
		ProductCode:  steam.ProductCCUK,
		CountryCodes: []string{"GB"},
		CurrencyCode: steam.CurrencyGBP,
		Name:         "Pound Sterling",
		Symbol:       "£",
		Enabled:      true,
	},
	steam.ProductCCQA: {
		ProductCode:  steam.ProductCCQA,
		CountryCodes: []string{"QA"},
		CurrencyCode: steam.CurrencyQAR,
		Name:         "Qatari Riyal",
		Symbol:       "QR",
	},
	steam.ProductCCRU: {
		ProductCode:  steam.ProductCCRU,
		CountryCodes: []string{"RU"},
		CurrencyCode: steam.CurrencyRUB,
		Name:         "Russian Ruble",
		Symbol:       "₽",
		Enabled:      true,
	},
	steam.ProductCCSA: {
		ProductCode:  steam.ProductCCSA,
		CountryCodes: []string{"SA"},
		CurrencyCode: steam.CurrencySAR,
		Name:         "Saudi Riyal",
		Symbol:       "SR",
	},
	steam.ProductCCSG: {
		ProductCode:  steam.ProductCCSG,
		CountryCodes: []string{"SG"},
		CurrencyCode: steam.CurrencySGD,
		Name:         "Singapore Dollar",
		Symbol:       "S$",
	},
	steam.ProductCCZA: {
		ProductCode:  steam.ProductCCZA,
		CountryCodes: []string{"ZA"},
		CurrencyCode: steam.CurrencyZAR,
		Name:         "South African Rand",
		Symbol:       "R",
	},
	steam.ProductCCKR: {
		ProductCode:  steam.ProductCCKR,
		CountryCodes: []string{"KR"},
		CurrencyCode: steam.CurrencyKRW,
		Name:         "South Korean Won",
		Symbol:       "₩",
	},
	steam.ProductCCCH: {
		ProductCode:  steam.ProductCCCH,
		CountryCodes: []string{"CH"},
		CurrencyCode: steam.CurrencyCHF,
		Name:         "Swiss Franc",
		Symbol:       "CHF",
	},
	steam.ProductCCTH: {
		ProductCode:  steam.ProductCCTH,
		CountryCodes: []string{"TH"},
		CurrencyCode: steam.CurrencyTHB,
		Name:         "Thai Baht",
		Symbol:       "฿",
	},
	steam.ProductCCTR: {
		ProductCode:  steam.ProductCCTR,
		CountryCodes: []string{"TR"},
		CurrencyCode: steam.CurrencyTRY,
		Name:         "Turkish Lira",
		Symbol:       "₺",
	},
	steam.ProductCCUA: {
		ProductCode:  steam.ProductCCUA,
		CountryCodes: []string{"UA"},
		CurrencyCode: steam.CurrencyUAH,
		Name:         "Ukrainian Hryvnia",
		Symbol:       "₴",
	},
	steam.ProductCCAE: {
		ProductCode:  steam.ProductCCAE,
		CountryCodes: []string{"AE"},
		CurrencyCode: steam.CurrencyAED,
		Name:         "United Arab Emirates Dirham",
		Symbol:       "AED"},
	steam.ProductCCUS: {
		ProductCode:  steam.ProductCCUS,
		CountryCodes: []string{"US"},
		CurrencyCode: steam.CurrencyUSD,
		Name:         "United States Dollar",
		Symbol:       "$",
		Enabled:      true,
	},
	steam.ProductCCAZ: { // CIS
		ProductCode:  steam.ProductCCAZ,
		CountryCodes: []string{"AM", "AZ", "BY", "GE", "KZ", "KG", "MD", "TJ", "TM", "UZ", "UA"},
		CurrencyCode: steam.CurrencyUSD,
		Name:         "United States Dollar (CIS)",
		Symbol:       "$",
	},
	steam.ProductCCPK: { // SASIA
		ProductCode:  steam.ProductCCPK,
		CountryCodes: []string{"BD", "BT", "NP", "PK", "LK"},
		CurrencyCode: steam.CurrencyUSD,
		Name:         "United States Dollar (South Asia)",
		Symbol:       "$",
	},
	steam.ProductCCUY: {
		ProductCode:  steam.ProductCCUY,
		CountryCodes: []string{"UY"},
		CurrencyCode: steam.CurrencyUYU,
		Name:         "Uruguayan Peso",
		Symbol:       "$U",
	},
	steam.ProductCCVN: {
		ProductCode:  steam.ProductCCVN,
		CountryCodes: []string{"VN"},
		CurrencyCode: steam.CurrencyVND,
		Name:         "Vietnamese Dong",
		Symbol:       "₫",
	},
}

func IsValidProdCC(cc steam.ProductCC) bool {
	_, ok := ProductCountryCodes[cc]
	return ok
}

func GetProdCC(cc steam.ProductCC) ProductCountryCode {
	val, ok := ProductCountryCodes[cc]
	if ok {
		return val
	}
	return ProductCountryCodes[steam.ProductCCUS]
}

func GetProdCCs(activeOnly bool) (ccs []ProductCountryCode) {

	for _, v := range ProductCountryCodes {
		if !activeOnly || v.Enabled {
			ccs = append(ccs, v)
		}
	}

	sort.Slice(ccs, func(i, j int) bool {
		return ccs[i].Name < ccs[j].Name
	})

	return ccs
}

func CountryCodeToName(code string) string {

	switch code {
	case "", "_":
		return "No Country"
	case "BQ":
		return "Bonaire, Sint Eustatius and Saba"
	case "SH":
		return "Saint Helena"
	case "XK":
		return "Kosovo"
	case "FX":
		return "France, Metropolitan"
	case "YU":
		return "Yugoslavia"
	}

	country, err := gountriesInstance.FindCountryByAlpha(code)
	if err != nil {
		log.Err(err)
		return code
	}

	return country.Name.Common
}

func CountryCodeToContinent(code string) string {

	switch code {
	case "":
		return ""
	case "BQ":
		return ContinentSouthAmerica
	case "SH":
		return ContinentAfrica
	case "YU", "FX", "XK":
		return ContinentEurope
	}

	country, err := gountriesInstance.FindCountryByAlpha(code)
	if err != nil {
		log.Err(err, code)
		return ""
	}

	for _, v := range Continents {
		if v.Value == country.Continent {
			return v.Key
		}
	}

	return ""
}

//
func CountriesInContinent(continent string) (ret []string) {

	countries := gountriesInstance.FindCountries(gountries.Country{Geo: gountries.Geo{Continent: continent}})
	for _, country := range countries {
		ret = append(ret, country.Alpha2)
	}
	return ret
}

// Value is cents
func FormatPrice(currencyCode steam.CurrencyCode, value int, returnNumber ...bool) string {

	if value == 0 && len(returnNumber) == 0 {
		return "Free"
	}

	unit, _ := currency.ParseISO(string(currencyCode))
	printer := message.NewPrinter(language.AmericanEnglish)
	symbol := printer.Sprint(currency.Symbol(unit.Amount(0.0)))
	return strings.Replace(symbol, "0.00", humanize.FormatFloat("#,###.##", float64(value)/100), 1)
}

var States = map[string]map[string]string{
	"AU": {
		"ACT": "Australian Capital Territory",
		"JBT": "Jervis Bay Territory",
		"NSW": "New South Wales",
		"NT":  "Northern Territory",
		"QLD": "Queensland",
		"SA":  "South Australia",
		"TAS": "Tasmania",
		"VIC": "Victoria",
		"WA":  "Western Australia",
	},
	"CA": {
		"AB": "Alberta",
		"BC": "British Columbia",
		"MB": "Manitoba",
		"NB": "New Brunswick",
		"NL": "Newfoundland and Labrador",
		"NS": "Nova Scotia",
		"NT": "Northwest Territories",
		"NU": "Nunavut",
		"ON": "Ontario",
		"PE": "Prince Edward Island",
		"QC": "Quebec",
		"SK": "Saskatchewan",
		"YT": "Yukon",
	},
	"FR": {
		"97": "Aquitaine",
		"98": "Auvergne",
		"99": "Basse-Normandie",
		"A1": "Bourgogne",
		"A2": "Bretagne",
		"A3": "Centre",
		"A4": "Champagne-Ardenne",
		"A5": "Corse",
		"A6": "Franche-Comte",
		"A7": "Haute-Normandie",
		"A8": "Ile-de-France",
		"A9": "Languedoc-Roussillon",
		"B1": "Limousin",
		"B2": "Lorraine",
		"B3": "Midi-Pyrenees",
		"B4": "Nord-Pas-de-Calais",
		"B5": "Pays de la Loire",
		"B6": "Picardie",
		"B7": "Poitou-Charentes",
		"B8": "Provence-Alpes-Cote d'Azur",
		"B9": "Rhone-Alpes",
		"C1": "Alsace",
	},
	"GB": {
		"01": "Avon",
		"03": "Berkshire",
		"07": "Cleveland",
		"17": "Greater London",
		"18": "Greater Manchester",
		"20": "Hereford and Worcester",
		"22": "Humberside",
		"28": "Merseyside",
		"37": "South Yorkshire",
		"41": "Tyne and Wear",
		"43": "West Midlands",
		"45": "West Yorkshire",
		"79": "Central",
		"82": "Grampian",
		"84": "Lothian",
		"87": "Strathclyde",
		"88": "Tayside",
		"90": "Clwyd",
		"91": "Dyfed",
		"92": "Gwent",
		"94": "Mid Glamorgan",
		"96": "South Glamorgan",
		"97": "West Glamorgan",
		"A1": "Barking and Dagenham",
		"A2": "Barnet",
		"A3": "Barnsley",
		"A4": "Bath and North East Somerset",
		"A5": "Bedfordshire",
		"A6": "Bexley",
		"A7": "Birmingham",
		"A8": "Blackburn with Darwen",
		"A9": "Blackpool",
		"B1": "Bolton",
		"B2": "Bournemouth",
		"B3": "Bracknell Forest",
		"B4": "Bradford",
		"B5": "Brent",
		"B6": "Brighton and Hove",
		"B7": "Bristol, City of",
		"B8": "Bromley",
		"B9": "Buckinghamshire",
		"C1": "Bury",
		"C2": "Calderdale",
		"C3": "Cambridgeshire",
		"C4": "Camden",
		"C5": "Cheshire",
		"C6": "Cornwall",
		"C7": "Coventry",
		"C8": "Croydon",
		"C9": "Cumbria",
		"D1": "Darlington",
		"D2": "Derby",
		"D3": "Derbyshire",
		"D4": "Devon",
		"D5": "Doncaster",
		"D6": "Dorset",
		"D7": "Dudley",
		"D8": "Durham",
		"D9": "Ealing",
		"E1": "East Riding of Yorkshire",
		"E2": "East Sussex",
		"E3": "Enfield",
		"E4": "Essex",
		"E5": "Gateshead",
		"E6": "Gloucestershire",
		"E7": "Greenwich",
		"E8": "Hackney",
		"E9": "Halton",
		"F1": "Hammersmith and Fulham",
		"F2": "Hampshire",
		"F3": "Haringey",
		"F4": "Harrow",
		"F5": "Hartlepool",
		"F6": "Havering",
		"F7": "Herefordshire",
		"F8": "Hertford",
		"F9": "Hillingdon",
		"G1": "Hounslow",
		"G2": "Isle of Wight",
		"G3": "Islington",
		"G4": "Kensington and Chelsea",
		"G5": "Kent",
		"G6": "Kingston upon Hull, City of",
		"G7": "Kingston upon Thames",
		"G8": "Kirklees",
		"G9": "Knowsley",
		"H1": "Lambeth",
		"H2": "Lancashire",
		"H3": "Leeds",
		"H4": "Leicester",
		"H5": "Leicestershire",
		"H6": "Lewisham",
		"H7": "Lincolnshire",
		"H8": "Liverpool",
		"H9": "London, City of",
		"I1": "Luton",
		"I2": "Manchester",
		"I3": "Medway",
		"I4": "Merton",
		"I5": "Middlesbrough",
		"I6": "Milton Keynes",
		"I7": "Newcastle upon Tyne",
		"I8": "Newham",
		"I9": "Norfolk",
		"J1": "Northamptonshire",
		"J2": "North East Lincolnshire",
		"J3": "North Lincolnshire",
		"J4": "North Somerset",
		"J5": "North Tyneside",
		"J6": "Northumberland",
		"J7": "North Yorkshire",
		"J8": "Nottingham",
		"J9": "Nottinghamshire",
		"K1": "Oldham",
		"K2": "Oxfordshire",
		"K3": "Peterborough",
		"K4": "Plymouth",
		"K5": "Poole",
		"K6": "Portsmouth",
		"K7": "Reading",
		"K8": "Redbridge",
		"K9": "Redcar and Cleveland",
		"L1": "Richmond upon Thames",
		"L2": "Rochdale",
		"L3": "Rotherham",
		"L4": "Rutland",
		"L5": "Salford",
		"L6": "Shropshire",
		"L7": "Sandwell",
		"L8": "Sefton",
		"L9": "Sheffield",
		"M1": "Slough",
		"M2": "Solihull",
		"M3": "Somerset",
		"M4": "Southampton",
		"M5": "Southend-on-Sea",
		"M6": "South Gloucestershire",
		"M7": "South Tyneside",
		"M8": "Southwark",
		"M9": "Staffordshire",
		"N1": "St. Helens",
		"N2": "Stockport",
		"N3": "Stockton-on-Tees",
		"N4": "Stoke-on-Trent",
		"N5": "Suffolk",
		"N6": "Sunderland",
		"N7": "Surrey",
		"N8": "Sutton",
		"N9": "Swindon",
		"O1": "Tameside",
		"O2": "Telford and Wrekin",
		"O3": "Thurrock",
		"O4": "Torbay",
		"O5": "Tower Hamlets",
		"O6": "Trafford",
		"O7": "Wakefield",
		"O8": "Walsall",
		"O9": "Waltham Forest",
		"P1": "Wandsworth",
		"P2": "Warrington",
		"P3": "Warwickshire",
		"P4": "West Berkshire",
		"P5": "Westminster",
		"P6": "West Sussex",
		"P7": "Wigan",
		"P8": "Wiltshire",
		"P9": "Windsor and Maidenhead",
		"Q1": "Wirral",
		"Q2": "Wokingham",
		"Q3": "Wolverhampton",
		"Q4": "Worcestershire",
		"Q5": "York",
		"Q6": "Antrim",
		"Q7": "Ards",
		"Q8": "Armagh",
		"Q9": "Ballymena",
		"R1": "Ballymoney",
		"R2": "Banbridge",
		"R3": "Belfast",
		"R4": "Carrickfergus",
		"R5": "Castlereagh",
		"R6": "Coleraine",
		"R7": "Cookstown",
		"R8": "Craigavon",
		"R9": "Down",
		"S1": "Dungannon",
		"S2": "Fermanagh",
		"S3": "Larne",
		"S4": "Limavady",
		"S5": "Lisburn",
		"S6": "Derry",
		"S7": "Magherafelt",
		"S8": "Moyle",
		"S9": "Newry and Mourne",
		"T1": "Newtownabbey",
		"T2": "North Down",
		"T3": "Omagh",
		"T4": "Strabane",
		"T5": "Aberdeen City",
		"T6": "Aberdeenshire",
		"T7": "Angus",
		"T8": "Argyll and Bute",
		"T9": "Scottish Borders, The",
		"U1": "Clackmannanshire",
		"U2": "Dumfries and Galloway",
		"U3": "Dundee City",
		"U4": "East Ayrshire",
		"U5": "East Dunbartonshire",
		"U6": "East Lothian",
		"U7": "East Renfrewshire",
		"U8": "Edinburgh, City of",
		"U9": "Falkirk",
		"V1": "Fife",
		"V2": "Glasgow City",
		"V3": "Highland",
		"V4": "Inverclyde",
		"V5": "Midlothian",
		"V6": "Moray",
		"V7": "North Ayrshire",
		"V8": "North Lanarkshire",
		"V9": "Orkney",
		"W1": "Perth and Kinross",
		"W2": "Renfrewshire",
		"W3": "Shetland Islands",
		"W4": "South Ayrshire",
		"W5": "South Lanarkshire",
		"W6": "Stirling",
		"W7": "West Dunbartonshire",
		"W8": "Eilean Siar",
		"W9": "West Lothian",
		"X1": "Isle of Anglesey",
		"X2": "Blaenau Gwent",
		"X3": "Bridgend",
		"X4": "Caerphilly",
		"X5": "Cardiff",
		"X6": "Ceredigion",
		"X7": "Carmarthenshire",
		"X8": "Conwy",
		"X9": "Denbighshire",
		"Y1": "Flintshire",
		"Y2": "Gwynedd",
		"Y3": "Merthyr Tydfil",
		"Y4": "Monmouthshire",
		"Y5": "Neath Port Talbot",
		"Y6": "Newport",
		"Y7": "Pembrokeshire",
		"Y8": "Powys",
		"Y9": "Rhondda Cynon Taff",
		"Z1": "Swansea",
		"Z2": "Torfaen",
		"Z3": "Vale of Glamorgan, The",
		"Z4": "Wrexham",
	},
	"NZ": {
		"01": "Akaroa",
		"03": "Amuri",
		"04": "Ashburton",
		"07": "Bay of Islands",
		"08": "Bruce",
		"09": "Buller",
		"10": "Chatham Islands",
		"11": "Cheviot",
		"12": "Clifton",
		"13": "Clutha",
		"14": "Cook",
		"16": "Dannevirke",
		"17": "Egmont",
		"18": "Eketahuna",
		"19": "Ellesmere",
		"20": "Eltham",
		"21": "Eyre",
		"22": "Featherston",
		"24": "Franklin",
		"26": "Golden Bay",
		"27": "Great Barrier Island",
		"28": "Grey",
		"29": "Hauraki Plains",
		"30": "Hawera",
		"31": "Hawke's Bay",
		"32": "Heathcote",
		"33": "Hobson",
		"34": "Hokianga",
		"35": "Horowhenua",
		"36": "Hutt",
		"37": "Inangahua",
		"38": "Inglewood",
		"39": "Kaikoura",
		"40": "Kairanga",
		"41": "Kiwitea",
		"43": "Lake",
		"45": "Mackenzie",
		"46": "Malvern",
		"47": "Manawatu",
		"48": "Mangonui",
		"49": "Maniototo",
		"50": "Marlborough",
		"51": "Masterton",
		"52": "Matamata",
		"53": "Mount Herbert",
		"54": "Ohinemuri",
		"55": "Opotiki",
		"56": "Oroua",
		"57": "Otamatea",
		"58": "Otorohanga",
		"59": "Oxford",
		"60": "Pahiatua",
		"61": "Paparua",
		"63": "Patea",
		"65": "Piako",
		"66": "Pohangina",
		"67": "Raglan",
		"68": "Rangiora",
		"69": "Rangitikei",
		"70": "Rodney",
		"71": "Rotorua",
		"72": "Southland",
		"73": "Stewart Island",
		"74": "Stratford",
		"76": "Taranaki",
		"77": "Taumarunui",
		"78": "Taupo",
		"79": "Tauranga",
		"81": "Tuapeka",
		"82": "Vincent",
		"83": "Waiapu",
		"84": "Waihemo",
		"85": "Waikato",
		"86": "Waikohu",
		"88": "Waimairi",
		"89": "Waimarino",
		"90": "Waimate",
		"91": "Waimate West",
		"92": "Waimea",
		"93": "Waipa",
		"95": "Waipawa",
		"96": "Waipukurau",
		"97": "Wairarapa South",
		"98": "Wairewa",
		"99": "Wairoa",
		"A1": "Whangarei",
		"A2": "Whangaroa",
		"A3": "Woodville",
		"A4": "Waitaki",
		"A6": "Waitomo",
		"A8": "Waitotara",
		"B2": "Wanganui",
		"B3": "Westland",
		"B4": "Whakatane",
		"D4": "Hurunui",
		"D5": "Silverpeaks",
		"D6": "Strathallan",
		"D8": "Waiheke",
		"D9": "Hikurangi",
		"E1": "Manaia",
		"E2": "Runanga",
		"E3": "Saint Kilda",
		"E4": "Thames-Coromandel",
		"E5": "Waverley",
		"E6": "Wallace</option>",
	},
	"PH": {
		"01": "Abra",
		"02": "Agusan del Norte",
		"03": "Agusan del Sur",
		"04": "Aklan",
		"05": "Albay",
		"06": "Antique",
		"07": "Bataan",
		"08": "Batanes",
		"09": "Batangas",
		"10": "Benguet",
		"11": "Bohol",
		"12": "Bukidnon",
		"13": "Bulacan",
		"14": "Cagayan",
		"15": "Camarines Norte",
		"16": "Camarines Sur",
		"17": "Camiguin",
		"18": "Capiz",
		"19": "Catanduanes",
		"20": "Cavite",
		"21": "Cebu",
		"22": "Basilan",
		"23": "Eastern Samar",
		"24": "Davao",
		"25": "Davao del Sur",
		"26": "Davao Oriental",
		"27": "Ifugao",
		"28": "Ilocos Norte",
		"29": "Ilocos Sur",
		"30": "Iloilo",
		"31": "Isabela",
		"32": "Kalinga-Apayao",
		"33": "Laguna",
		"34": "Lanao del Norte",
		"35": "Lanao del Sur",
		"36": "La Union",
		"37": "Leyte",
		"38": "Marinduque",
		"39": "Masbate",
		"40": "Mindoro Occidental",
		"41": "Mindoro Oriental",
		"42": "Misamis Occidental",
		"43": "Misamis Oriental",
		"44": "Mountain",
		"46": "Negros Oriental",
		"47": "Nueva Ecija",
		"48": "Nueva Vizcaya",
		"49": "Palawan",
		"50": "Pampanga",
		"51": "Pangasinan",
		"53": "Rizal",
		"54": "Romblon",
		"55": "Samar",
		"56": "Maguindanao",
		"57": "North Cotabato",
		"58": "Sorsogon",
		"59": "Southern Leyte",
		"60": "Sulu",
		"61": "Surigao del Norte",
		"62": "Surigao del Sur",
		"63": "Tarlac",
		"64": "Zambales",
		"65": "Zamboanga del Norte",
		"66": "Zamboanga del Sur",
		"67": "Northern Samar",
		"68": "Quirino",
		"69": "Siquijor",
		"70": "South Cotabato",
		"71": "Sultan Kudarat",
		"72": "Tawitawi",
		"A1": "Angeles",
		"A2": "Bacolod",
		"A3": "Bago",
		"A4": "Baguio",
		"A5": "Bais",
		"A6": "Basilan City",
		"A7": "Batangas City",
		"A8": "Butuan",
		"A9": "Cabanatuan",
		"B1": "Cadiz",
		"B2": "Cagayan de Oro",
		"B3": "Calbayog",
		"B4": "Caloocan",
		"B5": "Canlaon",
		"B6": "Cavite City",
		"B7": "Cebu City",
		"B8": "Cotabato",
		"B9": "Dagupan",
		"C1": "Danao",
		"C2": "Dapitan",
		"C3": "Davao City",
		"C4": "Dipolog",
		"C5": "Dumaguete",
		"C6": "General Santos",
		"C7": "Gingoog",
		"C8": "Iligan",
		"C9": "Iloilo City",
		"D1": "Iriga",
		"D2": "La Carlota",
		"D3": "Laoag",
		"D4": "Lapu-Lapu",
		"D5": "Legaspi",
		"D6": "Lipa",
		"D7": "Lucena",
		"D8": "Mandaue",
		"D9": "Manila",
		"E1": "Marawi",
		"E2": "Naga",
		"E3": "Olongapo",
		"E4": "Ormoc",
		"E5": "Oroquieta",
		"E6": "Ozamis",
		"E7": "Pagadian",
		"E8": "Palayan",
		"E9": "Pasay",
		"F1": "Puerto Princesa",
		"F2": "Quezon City",
		"F3": "Roxas",
		"F4": "San Carlos",
		"F5": "San Carlos",
		"F6": "San Jose",
		"F7": "San Pablo",
		"F8": "Silay",
		"F9": "Surigao",
		"G1": "Tacloban",
		"G2": "Tagaytay",
		"G3": "Tagbilaran",
		"G4": "Tangub",
		"G5": "Toledo",
		"G6": "Trece Martires",
		"G7": "Zamboanga",
		"G8": "Aurora",
		"H2": "Quezon",
		"H3": "Negros Occidental",
	},
	"SI": {
		"01": "Ajdovscina",
		"02": "Beltinci",
		"03": "Bled",
		"04": "Bohinj",
		"05": "Borovnica",
		"06": "Bovec",
		"07": "Brda",
		"08": "Brezice",
		"09": "Brezovica",
		"11": "Celje",
		"12": "Cerklje na Gorenjskem",
		"13": "Cerknica",
		"14": "Cerkno",
		"15": "Crensovci",
		"16": "Crna na Koroskem",
		"17": "Crnomelj",
		"19": "Divaca",
		"20": "Dobrepolje",
		"22": "Dol pri Ljubljani",
		"24": "Dornava",
		"25": "Dravograd",
		"26": "Duplek",
		"27": "Gorenja Vas-Poljane",
		"28": "Gorisnica",
		"29": "Gornja Radgona",
		"30": "Gornji Grad",
		"31": "Gornji Petrovci",
		"32": "Grosuplje",
		"34": "Hrastnik",
		"35": "Hrpelje-Kozina",
		"36": "Idrija",
		"37": "Ig",
		"38": "Ilirska Bistrica",
		"39": "Ivancna Gorica",
		"40": "Izola-Isola",
		"42": "Jursinci",
		"44": "Kanal",
		"45": "Kidricevo",
		"46": "Kobarid",
		"47": "Kobilje",
		"49": "Komen",
		"50": "Koper-Capodistria",
		"51": "Kozje",
		"52": "Kranj",
		"53": "Kranjska Gora",
		"54": "Krsko",
		"55": "Kungota",
		"57": "Lasko",
		"61": "Ljubljana",
		"62": "Ljubno",
		"64": "Logatec",
		"66": "Loski Potok",
		"68": "Lukovica",
		"71": "Medvode",
		"72": "Menges",
		"73": "Metlika",
		"74": "Mezica",
		"76": "Mislinja",
		"77": "Moravce",
		"78": "Moravske Toplice",
		"79": "Mozirje",
		"80": "Murska Sobota",
		"81": "Muta",
		"82": "Naklo",
		"83": "Nazarje",
		"84": "Nova Gorica",
		"86": "Odranci",
		"87": "Ormoz",
		"88": "Osilnica",
		"89": "Pesnica",
		"91": "Pivka",
		"92": "Podcetrtek",
		"94": "Postojna",
		"97": "Puconci",
		"98": "Racam",
		"99": "Radece",
		"A1": "Radenci",
		"A2": "Radlje ob Dravi",
		"A3": "Radovljica",
		"A6": "Rogasovci",
		"A7": "Rogaska Slatina",
		"A8": "Rogatec",
		"B1": "Semic",
		"B2": "Sencur",
		"B3": "Sentilj",
		"B4": "Sentjernej",
		"B6": "Sevnica",
		"B7": "Sezana",
		"B8": "Skocjan",
		"B9": "Skofja Loka",
		"C1": "Skofljica",
		"C2": "Slovenj Gradec",
		"C4": "Slovenske Konjice",
		"C5": "Smarje pri Jelsah",
		"C6": "Smartno ob Paki",
		"C7": "Sostanj",
		"C8": "Starse",
		"C9": "Store",
		"D1": "Sveti Jurij",
		"D2": "Tolmin",
		"D3": "Trbovlje",
		"D4": "Trebnje",
		"D5": "Trzic",
		"D6": "Turnisce",
		"D7": "Velenje",
		"D8": "Velike Lasce",
		"E1": "Vipava",
		"E2": "Vitanje",
		"E3": "Vodice",
		"E5": "Vrhnika",
		"E6": "Vuzenica",
		"E7": "Zagorje ob Savi",
		"E9": "Zavrc",
		"F1": "Zelezniki",
		"F2": "Ziri",
		"F3": "Zrece",
		"G4": "Dobrova-Horjul-Polhov Gradec",
		"G7": "Domzale",
		"H4": "Jesenice",
		"H6": "Kamnik",
		"H7": "Kocevje",
		"I2": "Kuzma",
		"I3": "Lenart",
		"I5": "Litija",
		"I6": "Ljutomer",
		"I7": "Loska Dolina",
		"I9": "Luce",
		"J1": "Majsperk",
		"J2": "Maribor",
		"J5": "Miren-Kostanjevica",
		"J7": "Novo Mesto",
		"J9": "Piran",
		"K5": "Preddvor",
		"K7": "Ptuj",
		"L1": "Ribnica",
		"L3": "Ruse",
		"L7": "Sentjur pri Celju",
		"L8": "Slovenska Bistrica",
		"N2": "Videm",
		"N3": "Vojnik",
		"N5": "Zalec",
	},
	"US": {
		"AK": "Alaska",
		"AL": "Alabama",
		"AR": "Arkansas",
		"AS": "American Samoa",
		"AZ": "Arizona",
		"CA": "California",
		"CO": "Colorado",
		"CT": "Connecticut",
		"DC": "District of Columbia",
		"DE": "Delaware",
		"FL": "Florida",
		"FM": "Micronesia",
		"GA": "Georgia",
		"GU": "Guam",
		"HI": "Hawaii",
		"IA": "Iowa",
		"ID": "Idaho",
		"IL": "Illinois",
		"IN": "Indiana",
		"KS": "Kansas",
		"KY": "Kentucky",
		"LA": "Louisiana",
		"MA": "Massachusetts",
		"MD": "Maryland",
		"ME": "Maine",
		"MH": "Marshall Islands",
		"MI": "Michigan",
		"MN": "Minnesota",
		"MO": "Missouri",
		"MP": "Northern Mariana Islands",
		"MS": "Mississippi",
		"MT": "Montana",
		"NC": "North Carolina",
		"ND": "North Dakota",
		"NE": "Nebraska",
		"NH": "New Hampshire",
		"NJ": "New Jersey",
		"NM": "New Mexico",
		"NV": "Nevada",
		"NY": "New York",
		"OH": "Ohio",
		"OK": "Oklahoma",
		"OR": "Oregon",
		"PA": "Pennsylvania",
		"PR": "Puerto Rico",
		"PW": "Palau",
		"RI": "Rhode Island",
		"SC": "South Carolina",
		"SD": "South Dakota",
		"TN": "Tennessee",
		"TX": "Texas",
		"UT": "Utah",
		"VA": "Virginia",
		"VI": "Virgin Islands",
		"VT": "Vermont",
		"WA": "Washington",
		"WI": "Wisconsin",
		"WV": "West Virginia",
		"WY": "Wyoming",
	},
}

// Continents
const (
	ContinentAfrica       = "AF"
	ContinentAntarctica   = "AN"
	ContinentAsia         = "AS"
	ContinentEurope       = "EU"
	ContinentNorthAmerica = "NA"
	ContinentSouthAmerica = "SA"
	ContinentOceania      = "OC"
)

// These strings must match the continents in the gountries library
var Continents = []Tuple{
	{Key: ContinentAfrica, Value: "Africa"},
	{Key: ContinentAntarctica, Value: "Antarctica"},
	{Key: ContinentAsia, Value: "Asia"},
	{Key: ContinentEurope, Value: "Europe"},
	{Key: ContinentNorthAmerica, Value: "North America"},
	{Key: ContinentSouthAmerica, Value: "South America"},
	{Key: ContinentOceania, Value: "Oceania"},
}
