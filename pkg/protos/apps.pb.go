// Code generated by protoc-gen-go. DO NOT EDIT.
// source: apps.proto

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	apps.proto
	github.proto
	shared.proto

It has these top-level messages:
	SearchAppsRequest
	AppsMongoResponse
	AppMongoResponse
	ListAppsRequest
	AppsElasticResponse
	AppElasticResponse
	CommitsRequest
	CommitResponse
	Empty
	Price
	PaginationResponse
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Search
type SearchAppsRequest struct {
	Offset    int64 `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit     int32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	SortField int64 `protobuf:"varint,3,opt,name=sortField" json:"sortField,omitempty"`
	SortOrder int32 `protobuf:"varint,4,opt,name=sortOrder" json:"sortOrder,omitempty"`
}

func (m *SearchAppsRequest) Reset()                    { *m = SearchAppsRequest{} }
func (m *SearchAppsRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchAppsRequest) ProtoMessage()               {}
func (*SearchAppsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SearchAppsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SearchAppsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchAppsRequest) GetSortField() int64 {
	if m != nil {
		return m.SortField
	}
	return 0
}

func (m *SearchAppsRequest) GetSortOrder() int32 {
	if m != nil {
		return m.SortOrder
	}
	return 0
}

type AppsMongoResponse struct {
	Pagination *PaginationResponse `protobuf:"bytes,1,opt,name=pagination" json:"pagination,omitempty"`
	Apps       []*AppMongoResponse `protobuf:"bytes,2,rep,name=apps" json:"apps,omitempty"`
}

func (m *AppsMongoResponse) Reset()                    { *m = AppsMongoResponse{} }
func (m *AppsMongoResponse) String() string            { return proto.CompactTextString(m) }
func (*AppsMongoResponse) ProtoMessage()               {}
func (*AppsMongoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AppsMongoResponse) GetPagination() *PaginationResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *AppsMongoResponse) GetApps() []*AppMongoResponse {
	if m != nil {
		return m.Apps
	}
	return nil
}

type AppMongoResponse struct {
	Id   int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *AppMongoResponse) Reset()                    { *m = AppMongoResponse{} }
func (m *AppMongoResponse) String() string            { return proto.CompactTextString(m) }
func (*AppMongoResponse) ProtoMessage()               {}
func (*AppMongoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AppMongoResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AppMongoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// List
type ListAppsRequest struct {
	Offset     int64    `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit      int64    `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	SortField  int64    `protobuf:"varint,3,opt,name=sortField" json:"sortField,omitempty"`
	SortOrder  int32    `protobuf:"varint,4,opt,name=sortOrder" json:"sortOrder,omitempty"`
	Ids        []int32  `protobuf:"varint,5,rep,packed,name=ids" json:"ids,omitempty"`
	Tags       []int32  `protobuf:"varint,6,rep,packed,name=tags" json:"tags,omitempty"`
	Genres     []int32  `protobuf:"varint,7,rep,packed,name=genres" json:"genres,omitempty"`
	Categories []int32  `protobuf:"varint,8,rep,packed,name=categories" json:"categories,omitempty"`
	Developers []int32  `protobuf:"varint,9,rep,packed,name=developers" json:"developers,omitempty"`
	Publishers []int32  `protobuf:"varint,10,rep,packed,name=publishers" json:"publishers,omitempty"`
	Platforms  []string `protobuf:"bytes,11,rep,name=platforms" json:"platforms,omitempty"`
}

func (m *ListAppsRequest) Reset()                    { *m = ListAppsRequest{} }
func (m *ListAppsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListAppsRequest) ProtoMessage()               {}
func (*ListAppsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListAppsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListAppsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListAppsRequest) GetSortField() int64 {
	if m != nil {
		return m.SortField
	}
	return 0
}

func (m *ListAppsRequest) GetSortOrder() int32 {
	if m != nil {
		return m.SortOrder
	}
	return 0
}

func (m *ListAppsRequest) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *ListAppsRequest) GetTags() []int32 {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ListAppsRequest) GetGenres() []int32 {
	if m != nil {
		return m.Genres
	}
	return nil
}

func (m *ListAppsRequest) GetCategories() []int32 {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *ListAppsRequest) GetDevelopers() []int32 {
	if m != nil {
		return m.Developers
	}
	return nil
}

func (m *ListAppsRequest) GetPublishers() []int32 {
	if m != nil {
		return m.Publishers
	}
	return nil
}

func (m *ListAppsRequest) GetPlatforms() []string {
	if m != nil {
		return m.Platforms
	}
	return nil
}

type AppsElasticResponse struct {
	Pagination *PaginationResponse   `protobuf:"bytes,1,opt,name=pagination" json:"pagination,omitempty"`
	Apps       []*AppElasticResponse `protobuf:"bytes,2,rep,name=apps" json:"apps,omitempty"`
}

func (m *AppsElasticResponse) Reset()                    { *m = AppsElasticResponse{} }
func (m *AppsElasticResponse) String() string            { return proto.CompactTextString(m) }
func (*AppsElasticResponse) ProtoMessage()               {}
func (*AppsElasticResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AppsElasticResponse) GetPagination() *PaginationResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *AppsElasticResponse) GetApps() []*AppElasticResponse {
	if m != nil {
		return m.Apps
	}
	return nil
}

type AppElasticResponse struct {
	AchievementsCounts   int32             `protobuf:"varint,1,opt,name=achievementsCounts" json:"achievementsCounts,omitempty"`
	FloatachievementsAvg float32           `protobuf:"fixed32,2,opt,name=floatachievementsAvg" json:"floatachievementsAvg,omitempty"`
	AchievementIcons     map[string]string `protobuf:"bytes,3,rep,name=achievementIcons" json:"achievementIcons,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Aliases              []string          `protobuf:"bytes,4,rep,name=aliases" json:"aliases,omitempty"`
	Categories           []int32           `protobuf:"varint,5,rep,packed,name=categories" json:"categories,omitempty"`
	Developers           []int32           `protobuf:"varint,6,rep,packed,name=developers" json:"developers,omitempty"`
	Followers            int32             `protobuf:"varint,7,opt,name=followers" json:"followers,omitempty"`
	Genres               []int32           `protobuf:"varint,8,rep,packed,name=genres" json:"genres,omitempty"`
	Icon                 string            `protobuf:"bytes,9,opt,name=icon" json:"icon,omitempty"`
	Id                   int32             `protobuf:"varint,10,opt,name=id" json:"id,omitempty"`
	Name                 string            `protobuf:"bytes,11,opt,name=name" json:"name,omitempty"`
	NameMarked           string            `protobuf:"bytes,12,opt,name=nameMarked" json:"nameMarked,omitempty"`
	Platforms            []string          `protobuf:"bytes,13,rep,name=platforms" json:"platforms,omitempty"`
	Players              int32             `protobuf:"varint,14,opt,name=players" json:"players,omitempty"`
	Prices               map[string]*Price `protobuf:"bytes,15,rep,name=prices" json:"prices,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Publishers           []int32           `protobuf:"varint,16,rep,packed,name=publishers" json:"publishers,omitempty"`
	ReleaseDate          int64             `protobuf:"varint,17,opt,name=releaseDate" json:"releaseDate,omitempty"`
	Score                float32           `protobuf:"fixed32,18,opt,name=score" json:"score,omitempty"`
	SearchScore          float32           `protobuf:"fixed32,19,opt,name=searchScore" json:"searchScore,omitempty"`
	Tags                 []int32           `protobuf:"varint,20,rep,packed,name=tags" json:"tags,omitempty"`
	Type                 string            `protobuf:"bytes,21,opt,name=type" json:"type,omitempty"`
	Trend                float32           `protobuf:"fixed32,22,opt,name=trend" json:"trend,omitempty"`
	WishlistAvg          float32           `protobuf:"fixed32,23,opt,name=wishlistAvg" json:"wishlistAvg,omitempty"`
	WishlistCount        int32             `protobuf:"varint,24,opt,name=wishlistCount" json:"wishlistCount,omitempty"`
}

func (m *AppElasticResponse) Reset()                    { *m = AppElasticResponse{} }
func (m *AppElasticResponse) String() string            { return proto.CompactTextString(m) }
func (*AppElasticResponse) ProtoMessage()               {}
func (*AppElasticResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AppElasticResponse) GetAchievementsCounts() int32 {
	if m != nil {
		return m.AchievementsCounts
	}
	return 0
}

func (m *AppElasticResponse) GetFloatachievementsAvg() float32 {
	if m != nil {
		return m.FloatachievementsAvg
	}
	return 0
}

func (m *AppElasticResponse) GetAchievementIcons() map[string]string {
	if m != nil {
		return m.AchievementIcons
	}
	return nil
}

func (m *AppElasticResponse) GetAliases() []string {
	if m != nil {
		return m.Aliases
	}
	return nil
}

func (m *AppElasticResponse) GetCategories() []int32 {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *AppElasticResponse) GetDevelopers() []int32 {
	if m != nil {
		return m.Developers
	}
	return nil
}

func (m *AppElasticResponse) GetFollowers() int32 {
	if m != nil {
		return m.Followers
	}
	return 0
}

func (m *AppElasticResponse) GetGenres() []int32 {
	if m != nil {
		return m.Genres
	}
	return nil
}

func (m *AppElasticResponse) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *AppElasticResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AppElasticResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppElasticResponse) GetNameMarked() string {
	if m != nil {
		return m.NameMarked
	}
	return ""
}

func (m *AppElasticResponse) GetPlatforms() []string {
	if m != nil {
		return m.Platforms
	}
	return nil
}

func (m *AppElasticResponse) GetPlayers() int32 {
	if m != nil {
		return m.Players
	}
	return 0
}

func (m *AppElasticResponse) GetPrices() map[string]*Price {
	if m != nil {
		return m.Prices
	}
	return nil
}

func (m *AppElasticResponse) GetPublishers() []int32 {
	if m != nil {
		return m.Publishers
	}
	return nil
}

func (m *AppElasticResponse) GetReleaseDate() int64 {
	if m != nil {
		return m.ReleaseDate
	}
	return 0
}

func (m *AppElasticResponse) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *AppElasticResponse) GetSearchScore() float32 {
	if m != nil {
		return m.SearchScore
	}
	return 0
}

func (m *AppElasticResponse) GetTags() []int32 {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *AppElasticResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AppElasticResponse) GetTrend() float32 {
	if m != nil {
		return m.Trend
	}
	return 0
}

func (m *AppElasticResponse) GetWishlistAvg() float32 {
	if m != nil {
		return m.WishlistAvg
	}
	return 0
}

func (m *AppElasticResponse) GetWishlistCount() int32 {
	if m != nil {
		return m.WishlistCount
	}
	return 0
}

func init() {
	proto.RegisterType((*SearchAppsRequest)(nil), "protos.SearchAppsRequest")
	proto.RegisterType((*AppsMongoResponse)(nil), "protos.AppsMongoResponse")
	proto.RegisterType((*AppMongoResponse)(nil), "protos.AppMongoResponse")
	proto.RegisterType((*ListAppsRequest)(nil), "protos.ListAppsRequest")
	proto.RegisterType((*AppsElasticResponse)(nil), "protos.AppsElasticResponse")
	proto.RegisterType((*AppElasticResponse)(nil), "protos.AppElasticResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AppsService service

type AppsServiceClient interface {
	Search(ctx context.Context, in *SearchAppsRequest, opts ...grpc.CallOption) (*AppsElasticResponse, error)
	Apps(ctx context.Context, in *ListAppsRequest, opts ...grpc.CallOption) (*AppsMongoResponse, error)
}

type appsServiceClient struct {
	cc *grpc.ClientConn
}

func NewAppsServiceClient(cc *grpc.ClientConn) AppsServiceClient {
	return &appsServiceClient{cc}
}

func (c *appsServiceClient) Search(ctx context.Context, in *SearchAppsRequest, opts ...grpc.CallOption) (*AppsElasticResponse, error) {
	out := new(AppsElasticResponse)
	err := grpc.Invoke(ctx, "/protos.AppsService/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appsServiceClient) Apps(ctx context.Context, in *ListAppsRequest, opts ...grpc.CallOption) (*AppsMongoResponse, error) {
	out := new(AppsMongoResponse)
	err := grpc.Invoke(ctx, "/protos.AppsService/Apps", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AppsService service

type AppsServiceServer interface {
	Search(context.Context, *SearchAppsRequest) (*AppsElasticResponse, error)
	Apps(context.Context, *ListAppsRequest) (*AppsMongoResponse, error)
}

func RegisterAppsServiceServer(s *grpc.Server, srv AppsServiceServer) {
	s.RegisterService(&_AppsService_serviceDesc, srv)
}

func _AppsService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchAppsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppsServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.AppsService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppsServiceServer).Search(ctx, req.(*SearchAppsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppsService_Apps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAppsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppsServiceServer).Apps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.AppsService/Apps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppsServiceServer).Apps(ctx, req.(*ListAppsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AppsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.AppsService",
	HandlerType: (*AppsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _AppsService_Search_Handler,
		},
		{
			MethodName: "Apps",
			Handler:    _AppsService_Apps_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "apps.proto",
}

func init() { proto.RegisterFile("apps.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 765 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0x5b, 0x6b, 0x1b, 0x47,
	0x14, 0xb6, 0xb4, 0xba, 0x58, 0x67, 0x7d, 0x91, 0xc7, 0xb7, 0xb1, 0x6a, 0x8a, 0x50, 0x4b, 0xd1,
	0x43, 0x11, 0x45, 0x85, 0x52, 0x4c, 0x29, 0xa8, 0xae, 0x43, 0x02, 0x31, 0x31, 0xeb, 0xd7, 0xbc,
	0x8c, 0x77, 0x8f, 0xa4, 0xc1, 0xab, 0x9d, 0xcd, 0xcc, 0x48, 0x46, 0x0f, 0x79, 0xc8, 0x2f, 0xc8,
	0xcf, 0xc9, 0x2f, 0xc8, 0xff, 0x0a, 0x33, 0xab, 0x95, 0x46, 0x2b, 0x25, 0x21, 0xe0, 0xa7, 0x9d,
	0xf3, 0x7d, 0x73, 0x2e, 0x7b, 0x6e, 0x03, 0xc0, 0xd2, 0x54, 0xf5, 0x52, 0x29, 0xb4, 0x20, 0x35,
	0xfb, 0x51, 0xad, 0x3d, 0x35, 0x66, 0x12, 0xa3, 0x0c, 0xed, 0xbc, 0x87, 0xa3, 0x7b, 0x64, 0x32,
	0x1c, 0x0f, 0xd2, 0x54, 0x05, 0xf8, 0x6e, 0x8a, 0x4a, 0x93, 0x33, 0xa8, 0x89, 0xe1, 0x50, 0xa1,
	0xa6, 0xa5, 0x76, 0xa9, 0xeb, 0x05, 0x0b, 0x89, 0x9c, 0x40, 0x35, 0xe6, 0x13, 0xae, 0x69, 0xb9,
	0x5d, 0xea, 0x56, 0x83, 0x4c, 0x20, 0x97, 0xd0, 0x50, 0x42, 0xea, 0x17, 0x1c, 0xe3, 0x88, 0x7a,
	0x56, 0x61, 0x05, 0xe4, 0xec, 0x1b, 0x19, 0xa1, 0xa4, 0x15, 0xab, 0xb7, 0x02, 0x8c, 0x7b, 0xe3,
	0xf8, 0x56, 0x24, 0x23, 0x11, 0xa0, 0x4a, 0x45, 0xa2, 0x90, 0x5c, 0x01, 0xa4, 0x6c, 0xc4, 0x13,
	0xa6, 0xb9, 0x48, 0x6c, 0x08, 0x7e, 0xbf, 0x95, 0xc5, 0xab, 0x7a, 0x77, 0x4b, 0x26, 0xbf, 0x1f,
	0x38, 0xb7, 0xc9, 0xef, 0x50, 0x31, 0xff, 0x4c, 0xcb, 0x6d, 0xaf, 0xeb, 0xf7, 0x69, 0xae, 0x35,
	0x48, 0xd3, 0x35, 0x1f, 0x81, 0xbd, 0xd5, 0xf9, 0x0b, 0x9a, 0x45, 0x86, 0x1c, 0x40, 0x99, 0x47,
	0xd6, 0x6b, 0x35, 0x28, 0xf3, 0x88, 0x10, 0xa8, 0x24, 0x6c, 0x82, 0xf6, 0x9f, 0x1b, 0x81, 0x3d,
	0x77, 0x3e, 0x95, 0xe1, 0xf0, 0x35, 0x57, 0xfa, 0x87, 0x93, 0xe6, 0x3d, 0x43, 0xd2, 0x48, 0x13,
	0x3c, 0x1e, 0x29, 0x5a, 0x6d, 0x7b, 0xdd, 0x6a, 0x60, 0x8e, 0x26, 0x46, 0xcd, 0x46, 0x8a, 0xd6,
	0x2c, 0x64, 0xcf, 0x26, 0x9e, 0x11, 0x26, 0x12, 0x15, 0xad, 0x5b, 0x74, 0x21, 0x91, 0x9f, 0x01,
	0x42, 0xa6, 0x71, 0x24, 0x24, 0x47, 0x45, 0x77, 0x2d, 0xe7, 0x20, 0x86, 0x8f, 0x70, 0x86, 0xb1,
	0x48, 0x51, 0x2a, 0xda, 0xc8, 0xf8, 0x15, 0x62, 0xf8, 0x74, 0xfa, 0x10, 0x73, 0x35, 0x36, 0x3c,
	0x64, 0xfc, 0x0a, 0x31, 0xb1, 0xa7, 0x31, 0xd3, 0x43, 0x21, 0x27, 0x8a, 0xfa, 0x6d, 0xaf, 0xdb,
	0x08, 0x56, 0x40, 0xe7, 0x43, 0x09, 0x8e, 0x4d, 0xd6, 0x6e, 0x62, 0xa6, 0x34, 0x0f, 0x9f, 0xa5,
	0xe6, 0xbd, 0xb5, 0x9a, 0xb7, 0x9c, 0x9a, 0x17, 0xbc, 0x2c, 0xaa, 0xfe, 0xb9, 0x0e, 0x64, 0x93,
	0x24, 0x3d, 0x20, 0x2c, 0x1c, 0x73, 0x9c, 0xe1, 0x04, 0x13, 0xad, 0xae, 0xc5, 0x34, 0xd1, 0x6a,
	0xd1, 0x08, 0x5b, 0x18, 0xd2, 0x87, 0x93, 0x61, 0x2c, 0x98, 0x76, 0xa9, 0xc1, 0x6c, 0x64, 0xeb,
	0x5c, 0x0e, 0xb6, 0x72, 0xe4, 0x2d, 0x34, 0x1d, 0xe8, 0x55, 0x28, 0x12, 0x45, 0x3d, 0x1b, 0xf6,
	0x1f, 0x5f, 0x0f, 0xbb, 0x37, 0x28, 0xa8, 0xdc, 0x24, 0x5a, 0xce, 0x83, 0x0d, 0x4b, 0x84, 0x42,
	0x9d, 0xc5, 0x9c, 0x29, 0x54, 0xb4, 0x62, 0x13, 0x9f, 0x8b, 0x85, 0xa2, 0x57, 0xbf, 0x53, 0xf4,
	0xda, 0x46, 0xd1, 0x2f, 0xa1, 0x31, 0x14, 0x71, 0x2c, 0x9e, 0x0c, 0x5d, 0xcf, 0x1a, 0x72, 0x09,
	0x38, 0xad, 0xb6, 0xbb, 0xd6, 0x6a, 0x04, 0x2a, 0x3c, 0x14, 0x09, 0x6d, 0x64, 0xa3, 0x63, 0xce,
	0x8b, 0xf1, 0x82, 0x8d, 0xf1, 0xf2, 0x57, 0xe3, 0x65, 0xa2, 0x31, 0xdf, 0x5b, 0x26, 0x1f, 0x31,
	0xa2, 0x7b, 0x96, 0x71, 0x90, 0xf5, 0x16, 0xdb, 0x2f, 0xb4, 0x98, 0xc9, 0x42, 0x1a, 0xb3, 0xb9,
	0x89, 0xf4, 0xc0, 0xba, 0xc9, 0x45, 0xf2, 0x2f, 0xd4, 0x52, 0xc9, 0x43, 0x54, 0xf4, 0xd0, 0xe6,
	0xfc, 0xb7, 0x6f, 0xe4, 0xfc, 0xce, 0x5e, 0xcc, 0x32, 0xbd, 0xd0, 0x2a, 0xb4, 0x7e, 0x73, 0xa3,
	0xf5, 0xdb, 0xe0, 0x4b, 0x8c, 0x91, 0x29, 0xfc, 0x9f, 0x69, 0xa4, 0x47, 0x76, 0xac, 0x5d, 0xc8,
	0x2c, 0x03, 0x15, 0x0a, 0x89, 0x94, 0xd8, 0x26, 0xc9, 0x04, 0xa3, 0xa7, 0xec, 0x12, 0xbe, 0xb7,
	0xdc, 0xb1, 0xe5, 0x5c, 0x68, 0x39, 0xe0, 0x27, 0xce, 0x80, 0x1b, 0x6c, 0x9e, 0x22, 0x3d, 0xcd,
	0x32, 0x67, 0xce, 0xc6, 0xbe, 0x96, 0x98, 0x44, 0xf4, 0x2c, 0xb3, 0x6f, 0x05, 0x63, 0xff, 0x89,
	0xab, 0x71, 0x6c, 0x36, 0xd6, 0x6c, 0x44, 0xcf, 0x33, 0xfb, 0x0e, 0x44, 0x7e, 0x85, 0xfd, 0x5c,
	0xb4, 0xdd, 0x4d, 0xa9, 0xcd, 0xdc, 0x3a, 0xd8, 0xba, 0x86, 0xd3, 0xad, 0xad, 0x68, 0x36, 0xd2,
	0x23, 0xce, 0xed, 0xac, 0x34, 0x02, 0x73, 0x34, 0x81, 0xcc, 0x58, 0x3c, 0xcd, 0xd7, 0x66, 0x26,
	0x5c, 0x95, 0xff, 0x2e, 0xb5, 0x5e, 0x82, 0xef, 0xe4, 0x76, 0x8b, 0xea, 0x2f, 0xae, 0xaa, 0xdf,
	0xdf, 0x5f, 0x6e, 0x01, 0xa3, 0xe5, 0x58, 0xea, 0x7f, 0x2c, 0x81, 0x6f, 0x76, 0xc9, 0x3d, 0xca,
	0x19, 0x0f, 0x91, 0xfc, 0x07, 0xb5, 0xec, 0x2d, 0x23, 0x17, 0xb9, 0xce, 0xc6, 0xdb, 0xd6, 0xfa,
	0xc9, 0xa9, 0x79, 0x71, 0x0b, 0x75, 0x76, 0xc8, 0x3f, 0x50, 0x31, 0x04, 0x39, 0xcf, 0xaf, 0x15,
	0xd6, 0x7c, 0xeb, 0xc2, 0xd5, 0x5f, 0x7b, 0x39, 0x3a, 0x3b, 0x0f, 0xd9, 0x1b, 0xfb, 0xe7, 0x97,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xea, 0x39, 0xb8, 0x1b, 0x78, 0x07, 0x00, 0x00,
}
