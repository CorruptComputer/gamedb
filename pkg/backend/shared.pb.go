// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shared.proto

package backend

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type Price struct {
	Exists          bool   `protobuf:"varint,1,opt,name=exists" json:"exists,omitempty"`
	Currency        string `protobuf:"bytes,2,opt,name=currency" json:"currency,omitempty"`
	Initial         int32  `protobuf:"varint,3,opt,name=initial" json:"initial,omitempty"`
	Final           int32  `protobuf:"varint,4,opt,name=final" json:"final,omitempty"`
	DiscountPercent int32  `protobuf:"varint,5,opt,name=discount_percent,json=discountPercent" json:"discount_percent,omitempty"`
	Individual      int32  `protobuf:"varint,6,opt,name=individual" json:"individual,omitempty"`
	Free            bool   `protobuf:"varint,7,opt,name=free" json:"free,omitempty"`
}

func (m *Price) Reset()                    { *m = Price{} }
func (m *Price) String() string            { return proto.CompactTextString(m) }
func (*Price) ProtoMessage()               {}
func (*Price) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Price) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

func (m *Price) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Price) GetInitial() int32 {
	if m != nil {
		return m.Initial
	}
	return 0
}

func (m *Price) GetFinal() int32 {
	if m != nil {
		return m.Final
	}
	return 0
}

func (m *Price) GetDiscountPercent() int32 {
	if m != nil {
		return m.DiscountPercent
	}
	return 0
}

func (m *Price) GetIndividual() int32 {
	if m != nil {
		return m.Individual
	}
	return 0
}

func (m *Price) GetFree() bool {
	if m != nil {
		return m.Free
	}
	return false
}

type PaginationResponse struct {
	Offset       int64 `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit        int64 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Total        int64 `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	PagesTotal   int64 `protobuf:"varint,4,opt,name=pagesTotal" json:"pagesTotal,omitempty"`
	PagesCurrent int64 `protobuf:"varint,5,opt,name=pagesCurrent" json:"pagesCurrent,omitempty"`
}

func (m *PaginationResponse) Reset()                    { *m = PaginationResponse{} }
func (m *PaginationResponse) String() string            { return proto.CompactTextString(m) }
func (*PaginationResponse) ProtoMessage()               {}
func (*PaginationResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *PaginationResponse) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *PaginationResponse) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PaginationResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PaginationResponse) GetPagesTotal() int64 {
	if m != nil {
		return m.PagesTotal
	}
	return 0
}

func (m *PaginationResponse) GetPagesCurrent() int64 {
	if m != nil {
		return m.PagesCurrent
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "protos.Empty")
	proto.RegisterType((*Price)(nil), "protos.Price")
	proto.RegisterType((*PaginationResponse)(nil), "protos.PaginationResponse")
}

func init() { proto.RegisterFile("shared.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x89, 0xdd, 0xb6, 0xeb, 0xb0, 0xa0, 0x04, 0x91, 0xe0, 0x41, 0x4a, 0x4f, 0xf5, 0xe2,
	0xc5, 0x47, 0x10, 0xef, 0x25, 0x78, 0x97, 0xd8, 0xa6, 0xeb, 0x40, 0x37, 0x29, 0xc9, 0x54, 0xdc,
	0x77, 0xf1, 0x89, 0x7c, 0x2a, 0xe9, 0xa4, 0x2b, 0xeb, 0x29, 0xf9, 0xbe, 0x99, 0xc3, 0xff, 0x0f,
	0xec, 0xe2, 0x87, 0x09, 0xb6, 0x7f, 0x9c, 0x82, 0x27, 0x2f, 0x0b, 0x7e, 0x62, 0x5d, 0x42, 0xfe,
	0x72, 0x98, 0xe8, 0x58, 0xff, 0x08, 0xc8, 0xdb, 0x80, 0x9d, 0x95, 0xb7, 0x50, 0xd8, 0x2f, 0x8c,
	0x14, 0x95, 0xa8, 0x44, 0xb3, 0xd5, 0x2b, 0xc9, 0x3b, 0xd8, 0x76, 0x73, 0x08, 0xd6, 0x75, 0x47,
	0x75, 0x51, 0x89, 0xe6, 0x52, 0xff, 0xb1, 0x54, 0x50, 0xa2, 0x43, 0x42, 0x33, 0xaa, 0xac, 0x12,
	0x4d, 0xae, 0x4f, 0x28, 0x6f, 0x20, 0x1f, 0xd0, 0x99, 0x51, 0x6d, 0xd8, 0x27, 0x90, 0x0f, 0x70,
	0xdd, 0x63, 0xec, 0xfc, 0xec, 0xe8, 0x6d, 0xb2, 0xa1, 0xb3, 0x8e, 0x54, 0xce, 0x0b, 0x57, 0x27,
	0xdf, 0x26, 0x2d, 0xef, 0x01, 0xd0, 0xf5, 0xf8, 0x89, 0xfd, 0x6c, 0x46, 0x55, 0xf0, 0xd2, 0x99,
	0x91, 0x12, 0x36, 0x43, 0xb0, 0x56, 0x95, 0x1c, 0x96, 0xff, 0xf5, 0xb7, 0x00, 0xd9, 0x9a, 0x3d,
	0x3a, 0x43, 0xe8, 0x9d, 0xb6, 0x71, 0xf2, 0x2e, 0x72, 0x33, 0x3f, 0x0c, 0xd1, 0x12, 0x37, 0xcb,
	0xf4, 0x4a, 0x4b, 0xc6, 0x11, 0x0f, 0x48, 0x5c, 0x2b, 0xd3, 0x09, 0x16, 0x4b, 0x9e, 0xd6, 0x46,
	0x99, 0x4e, 0xb0, 0xc4, 0x99, 0xcc, 0xde, 0xc6, 0x57, 0x1e, 0x6d, 0x78, 0x74, 0x66, 0x64, 0x0d,
	0x3b, 0xa6, 0x67, 0x3e, 0x4d, 0x6a, 0x95, 0xe9, 0x7f, 0xee, 0x3d, 0x1d, 0xff, 0xe9, 0x37, 0x00,
	0x00, 0xff, 0xff, 0xc5, 0x39, 0x86, 0xf5, 0x93, 0x01, 0x00, 0x00,
}
