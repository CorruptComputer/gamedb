// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: apps.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Search
type SearchAppsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Types      []string           `protobuf:"bytes,2,rep,name=types,proto3" json:"types,omitempty"`
	Tags       []int32            `protobuf:"varint,3,rep,packed,name=tags,proto3" json:"tags,omitempty"`
	Genres     []int32            `protobuf:"varint,4,rep,packed,name=genres,proto3" json:"genres,omitempty"`
	Developers []int32            `protobuf:"varint,5,rep,packed,name=developers,proto3" json:"developers,omitempty"`
	Publishers []int32            `protobuf:"varint,6,rep,packed,name=publishers,proto3" json:"publishers,omitempty"`
	Categories []int32            `protobuf:"varint,7,rep,packed,name=categories,proto3" json:"categories,omitempty"`
	Platforms  []string           `protobuf:"bytes,8,rep,name=platforms,proto3" json:"platforms,omitempty"`
	PriceMin   float32            `protobuf:"fixed32,9,opt,name=priceMin,proto3" json:"priceMin,omitempty"`
	PriceMax   float32            `protobuf:"fixed32,10,opt,name=priceMax,proto3" json:"priceMax,omitempty"`
	ScoreMin   float32            `protobuf:"fixed32,11,opt,name=scoreMin,proto3" json:"scoreMin,omitempty"`
	ScoreMax   float32            `protobuf:"fixed32,12,opt,name=scoreMax,proto3" json:"scoreMax,omitempty"`
	Currency   ProductCode        `protobuf:"varint,13,opt,name=currency,proto3,enum=generated.ProductCode" json:"currency,omitempty"`
	Search     string             `protobuf:"bytes,14,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *SearchAppsRequest) Reset() {
	*x = SearchAppsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAppsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAppsRequest) ProtoMessage() {}

func (x *SearchAppsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apps_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAppsRequest.ProtoReflect.Descriptor instead.
func (*SearchAppsRequest) Descriptor() ([]byte, []int) {
	return file_apps_proto_rawDescGZIP(), []int{0}
}

func (x *SearchAppsRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SearchAppsRequest) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *SearchAppsRequest) GetTags() []int32 {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SearchAppsRequest) GetGenres() []int32 {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *SearchAppsRequest) GetDevelopers() []int32 {
	if x != nil {
		return x.Developers
	}
	return nil
}

func (x *SearchAppsRequest) GetPublishers() []int32 {
	if x != nil {
		return x.Publishers
	}
	return nil
}

func (x *SearchAppsRequest) GetCategories() []int32 {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *SearchAppsRequest) GetPlatforms() []string {
	if x != nil {
		return x.Platforms
	}
	return nil
}

func (x *SearchAppsRequest) GetPriceMin() float32 {
	if x != nil {
		return x.PriceMin
	}
	return 0
}

func (x *SearchAppsRequest) GetPriceMax() float32 {
	if x != nil {
		return x.PriceMax
	}
	return 0
}

func (x *SearchAppsRequest) GetScoreMin() float32 {
	if x != nil {
		return x.ScoreMin
	}
	return 0
}

func (x *SearchAppsRequest) GetScoreMax() float32 {
	if x != nil {
		return x.ScoreMax
	}
	return 0
}

func (x *SearchAppsRequest) GetCurrency() ProductCode {
	if x != nil {
		return x.Currency
	}
	return ProductCode_AE
}

func (x *SearchAppsRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type AppsElasticResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *PaginationResponse   `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Apps       []*AppElasticResponse `protobuf:"bytes,2,rep,name=apps,proto3" json:"apps,omitempty"`
}

func (x *AppsElasticResponse) Reset() {
	*x = AppsElasticResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppsElasticResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppsElasticResponse) ProtoMessage() {}

func (x *AppsElasticResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apps_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppsElasticResponse.ProtoReflect.Descriptor instead.
func (*AppsElasticResponse) Descriptor() ([]byte, []int) {
	return file_apps_proto_rawDescGZIP(), []int{1}
}

func (x *AppsElasticResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *AppsElasticResponse) GetApps() []*AppElasticResponse {
	if x != nil {
		return x.Apps
	}
	return nil
}

type AppElasticResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AchievementsCounts int64                  `protobuf:"varint,1,opt,name=achievementsCounts,proto3" json:"achievementsCounts,omitempty"`
	AchievementsAvg    float32                `protobuf:"fixed32,2,opt,name=achievementsAvg,proto3" json:"achievementsAvg,omitempty"`
	AchievementIcons   map[string]string      `protobuf:"bytes,3,rep,name=achievementIcons,proto3" json:"achievementIcons,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Aliases            []string               `protobuf:"bytes,4,rep,name=aliases,proto3" json:"aliases,omitempty"`
	Categories         []int32                `protobuf:"varint,5,rep,packed,name=categories,proto3" json:"categories,omitempty"`
	Developers         []int32                `protobuf:"varint,6,rep,packed,name=developers,proto3" json:"developers,omitempty"`
	Followers          int64                  `protobuf:"varint,7,opt,name=followers,proto3" json:"followers,omitempty"`
	Genres             []int32                `protobuf:"varint,8,rep,packed,name=genres,proto3" json:"genres,omitempty"`
	Icon               string                 `protobuf:"bytes,9,opt,name=icon,proto3" json:"icon,omitempty"`
	Id                 int32                  `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`
	Name               string                 `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	NameMarked         string                 `protobuf:"bytes,12,opt,name=nameMarked,proto3" json:"nameMarked,omitempty"`
	Platforms          []string               `protobuf:"bytes,13,rep,name=platforms,proto3" json:"platforms,omitempty"`
	Players            int64                  `protobuf:"varint,14,opt,name=players,proto3" json:"players,omitempty"`
	Prices             map[string]*Price      `protobuf:"bytes,15,rep,name=prices,proto3" json:"prices,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Publishers         []int32                `protobuf:"varint,16,rep,packed,name=publishers,proto3" json:"publishers,omitempty"`
	ReleaseDate        *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=releaseDate,proto3" json:"releaseDate,omitempty"`
	Score              float32                `protobuf:"fixed32,18,opt,name=score,proto3" json:"score,omitempty"`
	SearchScore        float32                `protobuf:"fixed32,19,opt,name=searchScore,proto3" json:"searchScore,omitempty"`
	Tags               []int32                `protobuf:"varint,20,rep,packed,name=tags,proto3" json:"tags,omitempty"`
	Type               string                 `protobuf:"bytes,21,opt,name=type,proto3" json:"type,omitempty"`
	Trend              float32                `protobuf:"fixed32,22,opt,name=trend,proto3" json:"trend,omitempty"`
	WishlistAvg        float32                `protobuf:"fixed32,23,opt,name=wishlistAvg,proto3" json:"wishlistAvg,omitempty"`
	WishlistCount      int32                  `protobuf:"varint,24,opt,name=wishlistCount,proto3" json:"wishlistCount,omitempty"`
}

func (x *AppElasticResponse) Reset() {
	*x = AppElasticResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppElasticResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppElasticResponse) ProtoMessage() {}

func (x *AppElasticResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apps_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppElasticResponse.ProtoReflect.Descriptor instead.
func (*AppElasticResponse) Descriptor() ([]byte, []int) {
	return file_apps_proto_rawDescGZIP(), []int{2}
}

func (x *AppElasticResponse) GetAchievementsCounts() int64 {
	if x != nil {
		return x.AchievementsCounts
	}
	return 0
}

func (x *AppElasticResponse) GetAchievementsAvg() float32 {
	if x != nil {
		return x.AchievementsAvg
	}
	return 0
}

func (x *AppElasticResponse) GetAchievementIcons() map[string]string {
	if x != nil {
		return x.AchievementIcons
	}
	return nil
}

func (x *AppElasticResponse) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *AppElasticResponse) GetCategories() []int32 {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *AppElasticResponse) GetDevelopers() []int32 {
	if x != nil {
		return x.Developers
	}
	return nil
}

func (x *AppElasticResponse) GetFollowers() int64 {
	if x != nil {
		return x.Followers
	}
	return 0
}

func (x *AppElasticResponse) GetGenres() []int32 {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *AppElasticResponse) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AppElasticResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppElasticResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppElasticResponse) GetNameMarked() string {
	if x != nil {
		return x.NameMarked
	}
	return ""
}

func (x *AppElasticResponse) GetPlatforms() []string {
	if x != nil {
		return x.Platforms
	}
	return nil
}

func (x *AppElasticResponse) GetPlayers() int64 {
	if x != nil {
		return x.Players
	}
	return 0
}

func (x *AppElasticResponse) GetPrices() map[string]*Price {
	if x != nil {
		return x.Prices
	}
	return nil
}

func (x *AppElasticResponse) GetPublishers() []int32 {
	if x != nil {
		return x.Publishers
	}
	return nil
}

func (x *AppElasticResponse) GetReleaseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *AppElasticResponse) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *AppElasticResponse) GetSearchScore() float32 {
	if x != nil {
		return x.SearchScore
	}
	return 0
}

func (x *AppElasticResponse) GetTags() []int32 {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AppElasticResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AppElasticResponse) GetTrend() float32 {
	if x != nil {
		return x.Trend
	}
	return 0
}

func (x *AppElasticResponse) GetWishlistAvg() float32 {
	if x != nil {
		return x.WishlistAvg
	}
	return 0
}

func (x *AppElasticResponse) GetWishlistCount() int32 {
	if x != nil {
		return x.WishlistCount
	}
	return 0
}

// List
type ListAppsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Ids        []int32            `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Tags       []int32            `protobuf:"varint,3,rep,packed,name=tags,proto3" json:"tags,omitempty"`
	Genres     []int32            `protobuf:"varint,4,rep,packed,name=genres,proto3" json:"genres,omitempty"`
	Categories []int32            `protobuf:"varint,5,rep,packed,name=categories,proto3" json:"categories,omitempty"`
	Developers []int32            `protobuf:"varint,6,rep,packed,name=developers,proto3" json:"developers,omitempty"`
	Publishers []int32            `protobuf:"varint,7,rep,packed,name=publishers,proto3" json:"publishers,omitempty"`
	Platforms  []string           `protobuf:"bytes,8,rep,name=platforms,proto3" json:"platforms,omitempty"`
}

func (x *ListAppsRequest) Reset() {
	*x = ListAppsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsRequest) ProtoMessage() {}

func (x *ListAppsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apps_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsRequest.ProtoReflect.Descriptor instead.
func (*ListAppsRequest) Descriptor() ([]byte, []int) {
	return file_apps_proto_rawDescGZIP(), []int{3}
}

func (x *ListAppsRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListAppsRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ListAppsRequest) GetTags() []int32 {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ListAppsRequest) GetGenres() []int32 {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *ListAppsRequest) GetCategories() []int32 {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *ListAppsRequest) GetDevelopers() []int32 {
	if x != nil {
		return x.Developers
	}
	return nil
}

func (x *ListAppsRequest) GetPublishers() []int32 {
	if x != nil {
		return x.Publishers
	}
	return nil
}

func (x *ListAppsRequest) GetPlatforms() []string {
	if x != nil {
		return x.Platforms
	}
	return nil
}

type AppsMongoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *PaginationResponse `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Apps       []*AppMongoResponse `protobuf:"bytes,2,rep,name=apps,proto3" json:"apps,omitempty"`
}

func (x *AppsMongoResponse) Reset() {
	*x = AppsMongoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppsMongoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppsMongoResponse) ProtoMessage() {}

func (x *AppsMongoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apps_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppsMongoResponse.ProtoReflect.Descriptor instead.
func (*AppsMongoResponse) Descriptor() ([]byte, []int) {
	return file_apps_proto_rawDescGZIP(), []int{4}
}

func (x *AppsMongoResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *AppsMongoResponse) GetApps() []*AppMongoResponse {
	if x != nil {
		return x.Apps
	}
	return nil
}

type AppMongoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon            string                 `protobuf:"bytes,18,opt,name=icon,proto3" json:"icon,omitempty"`
	Tags            []int32                `protobuf:"varint,3,rep,packed,name=tags,proto3" json:"tags,omitempty"`
	Genres          []int32                `protobuf:"varint,4,rep,packed,name=genres,proto3" json:"genres,omitempty"`
	Categories      []int32                `protobuf:"varint,5,rep,packed,name=categories,proto3" json:"categories,omitempty"`
	Publishers      []int32                `protobuf:"varint,6,rep,packed,name=publishers,proto3" json:"publishers,omitempty"`
	Developers      []int32                `protobuf:"varint,7,rep,packed,name=developers,proto3" json:"developers,omitempty"`
	ReviewsScore    float32                `protobuf:"fixed32,8,opt,name=reviewsScore,proto3" json:"reviewsScore,omitempty"`
	ReviewsPositive int32                  `protobuf:"varint,9,opt,name=reviewsPositive,proto3" json:"reviewsPositive,omitempty"`
	ReviewsNegative int32                  `protobuf:"varint,10,opt,name=reviewsNegative,proto3" json:"reviewsNegative,omitempty"`
	ReleaseDateUnix *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=releaseDateUnix,proto3" json:"releaseDateUnix,omitempty"`
	ReleaseDate     string                 `protobuf:"bytes,12,opt,name=releaseDate,proto3" json:"releaseDate,omitempty"`
	Prices          map[string]*Price      `protobuf:"bytes,13,rep,name=prices,proto3" json:"prices,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MetaScore       int32                  `protobuf:"varint,14,opt,name=metaScore,proto3" json:"metaScore,omitempty"`
	PlayersMax      int32                  `protobuf:"varint,15,opt,name=playersMax,proto3" json:"playersMax,omitempty"`
	PlayersWeekMax  int32                  `protobuf:"varint,16,opt,name=playersWeekMax,proto3" json:"playersWeekMax,omitempty"`
	PlayersWeekAvg  float32                `protobuf:"fixed32,17,opt,name=playersWeekAvg,proto3" json:"playersWeekAvg,omitempty"`
}

func (x *AppMongoResponse) Reset() {
	*x = AppMongoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMongoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMongoResponse) ProtoMessage() {}

func (x *AppMongoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apps_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMongoResponse.ProtoReflect.Descriptor instead.
func (*AppMongoResponse) Descriptor() ([]byte, []int) {
	return file_apps_proto_rawDescGZIP(), []int{5}
}

func (x *AppMongoResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppMongoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppMongoResponse) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AppMongoResponse) GetTags() []int32 {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AppMongoResponse) GetGenres() []int32 {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *AppMongoResponse) GetCategories() []int32 {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *AppMongoResponse) GetPublishers() []int32 {
	if x != nil {
		return x.Publishers
	}
	return nil
}

func (x *AppMongoResponse) GetDevelopers() []int32 {
	if x != nil {
		return x.Developers
	}
	return nil
}

func (x *AppMongoResponse) GetReviewsScore() float32 {
	if x != nil {
		return x.ReviewsScore
	}
	return 0
}

func (x *AppMongoResponse) GetReviewsPositive() int32 {
	if x != nil {
		return x.ReviewsPositive
	}
	return 0
}

func (x *AppMongoResponse) GetReviewsNegative() int32 {
	if x != nil {
		return x.ReviewsNegative
	}
	return 0
}

func (x *AppMongoResponse) GetReleaseDateUnix() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleaseDateUnix
	}
	return nil
}

func (x *AppMongoResponse) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *AppMongoResponse) GetPrices() map[string]*Price {
	if x != nil {
		return x.Prices
	}
	return nil
}

func (x *AppMongoResponse) GetMetaScore() int32 {
	if x != nil {
		return x.MetaScore
	}
	return 0
}

func (x *AppMongoResponse) GetPlayersMax() int32 {
	if x != nil {
		return x.PlayersMax
	}
	return 0
}

func (x *AppMongoResponse) GetPlayersWeekMax() int32 {
	if x != nil {
		return x.PlayersWeekMax
	}
	return 0
}

func (x *AppMongoResponse) GetPlayersWeekAvg() float32 {
	if x != nil {
		return x.PlayersWeekAvg
	}
	return 0
}

// Similar
type ListSimilarAppsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId int32 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
}

func (x *ListSimilarAppsRequest) Reset() {
	*x = ListSimilarAppsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSimilarAppsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSimilarAppsRequest) ProtoMessage() {}

func (x *ListSimilarAppsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apps_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSimilarAppsRequest.ProtoReflect.Descriptor instead.
func (*ListSimilarAppsRequest) Descriptor() ([]byte, []int) {
	return file_apps_proto_rawDescGZIP(), []int{6}
}

func (x *ListSimilarAppsRequest) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type SimilarAppsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apps []*SimilarAppResponse `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty"`
}

func (x *SimilarAppsResponse) Reset() {
	*x = SimilarAppsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimilarAppsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimilarAppsResponse) ProtoMessage() {}

func (x *SimilarAppsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apps_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimilarAppsResponse.ProtoReflect.Descriptor instead.
func (*SimilarAppsResponse) Descriptor() ([]byte, []int) {
	return file_apps_proto_rawDescGZIP(), []int{7}
}

func (x *SimilarAppsResponse) GetApps() []*SimilarAppResponse {
	if x != nil {
		return x.Apps
	}
	return nil
}

type SimilarAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  int32 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Count  int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Order  int32 `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	Owners int32 `protobuf:"varint,4,opt,name=owners,proto3" json:"owners,omitempty"`
}

func (x *SimilarAppResponse) Reset() {
	*x = SimilarAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimilarAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimilarAppResponse) ProtoMessage() {}

func (x *SimilarAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apps_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimilarAppResponse.ProtoReflect.Descriptor instead.
func (*SimilarAppResponse) Descriptor() ([]byte, []int) {
	return file_apps_proto_rawDescGZIP(), []int{8}
}

func (x *SimilarAppResponse) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *SimilarAppResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SimilarAppResponse) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *SimilarAppResponse) GetOwners() int32 {
	if x != nil {
		return x.Owners
	}
	return 0
}

var File_apps_proto protoreflect.FileDescriptor

var file_apps_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x03, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x70,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x4d, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x4d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x78, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x78, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x22, 0x87, 0x01, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x73, 0x45, 0x6c, 0x61, 0x73,
	0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x04, 0x61, 0x70,
	0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x41, 0x70, 0x70, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x70, 0x70, 0x73, 0x22, 0xe0, 0x07,
	0x0a, 0x12, 0x41, 0x70, 0x70, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x41, 0x76, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x61,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x76, 0x67, 0x12, 0x5f,
	0x0a, 0x10, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x63, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x41, 0x70, 0x70, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x61,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d,
	0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12,
	0x41, 0x0a, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x41, 0x70, 0x70, 0x45,
	0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x73,
	0x18, 0x10, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x14, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69,
	0x73, 0x74, 0x41, 0x76, 0x67, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x77, 0x69, 0x73,
	0x68, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x69, 0x73, 0x68,
	0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x43,
	0x0a, 0x15, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x63, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x4b, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x8b, 0x02, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x22, 0x83,
	0x01, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x73, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x41, 0x70,
	0x70, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x61, 0x70, 0x70, 0x73, 0x22, 0xd2, 0x05, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x6e, 0x67,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x4e, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a,
	0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x6e,
	0x67, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x4d, 0x61, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x4d, 0x61, 0x78, 0x12, 0x26, 0x0a, 0x0e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x57, 0x65, 0x65, 0x6b, 0x4d, 0x61, 0x78, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x57, 0x65, 0x65,
	0x6b, 0x4d, 0x61, 0x78, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x57,
	0x65, 0x65, 0x6b, 0x41, 0x76, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x57, 0x65, 0x65, 0x6b, 0x41, 0x76, 0x67, 0x1a, 0x4b, 0x0a, 0x0b,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2e, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x13, 0x53, 0x69, 0x6d,
	0x69, 0x6c, 0x61, 0x72, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x53, 0x69, 0x6d, 0x69, 0x6c,
	0x61, 0x72, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61,
	0x70, 0x70, 0x73, 0x22, 0x6e, 0x0a, 0x12, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x32, 0xeb, 0x01, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1c, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x41, 0x70, 0x70, 0x73, 0x45, 0x6c, 0x61, 0x73,
	0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x41, 0x70,
	0x70, 0x73, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x07, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x12, 0x21, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d,
	0x69, 0x6c, 0x61, 0x72, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x53, 0x69, 0x6d, 0x69,
	0x6c, 0x61, 0x72, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x67, 0x61, 0x6d, 0x65, 0x64, 0x62, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x64, 0x62, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apps_proto_rawDescOnce sync.Once
	file_apps_proto_rawDescData = file_apps_proto_rawDesc
)

func file_apps_proto_rawDescGZIP() []byte {
	file_apps_proto_rawDescOnce.Do(func() {
		file_apps_proto_rawDescData = protoimpl.X.CompressGZIP(file_apps_proto_rawDescData)
	})
	return file_apps_proto_rawDescData
}

var file_apps_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_apps_proto_goTypes = []interface{}{
	(*SearchAppsRequest)(nil),      // 0: generated.SearchAppsRequest
	(*AppsElasticResponse)(nil),    // 1: generated.AppsElasticResponse
	(*AppElasticResponse)(nil),     // 2: generated.AppElasticResponse
	(*ListAppsRequest)(nil),        // 3: generated.ListAppsRequest
	(*AppsMongoResponse)(nil),      // 4: generated.AppsMongoResponse
	(*AppMongoResponse)(nil),       // 5: generated.AppMongoResponse
	(*ListSimilarAppsRequest)(nil), // 6: generated.ListSimilarAppsRequest
	(*SimilarAppsResponse)(nil),    // 7: generated.SimilarAppsResponse
	(*SimilarAppResponse)(nil),     // 8: generated.SimilarAppResponse
	nil,                            // 9: generated.AppElasticResponse.AchievementIconsEntry
	nil,                            // 10: generated.AppElasticResponse.PricesEntry
	nil,                            // 11: generated.AppMongoResponse.PricesEntry
	(*PaginationRequest)(nil),      // 12: generated.PaginationRequest
	(ProductCode)(0),               // 13: generated.ProductCode
	(*PaginationResponse)(nil),     // 14: generated.PaginationResponse
	(*timestamppb.Timestamp)(nil),  // 15: google.protobuf.Timestamp
	(*Price)(nil),                  // 16: generated.Price
}
var file_apps_proto_depIdxs = []int32{
	12, // 0: generated.SearchAppsRequest.pagination:type_name -> generated.PaginationRequest
	13, // 1: generated.SearchAppsRequest.currency:type_name -> generated.ProductCode
	14, // 2: generated.AppsElasticResponse.pagination:type_name -> generated.PaginationResponse
	2,  // 3: generated.AppsElasticResponse.apps:type_name -> generated.AppElasticResponse
	9,  // 4: generated.AppElasticResponse.achievementIcons:type_name -> generated.AppElasticResponse.AchievementIconsEntry
	10, // 5: generated.AppElasticResponse.prices:type_name -> generated.AppElasticResponse.PricesEntry
	15, // 6: generated.AppElasticResponse.releaseDate:type_name -> google.protobuf.Timestamp
	12, // 7: generated.ListAppsRequest.pagination:type_name -> generated.PaginationRequest
	14, // 8: generated.AppsMongoResponse.pagination:type_name -> generated.PaginationResponse
	5,  // 9: generated.AppsMongoResponse.apps:type_name -> generated.AppMongoResponse
	15, // 10: generated.AppMongoResponse.releaseDateUnix:type_name -> google.protobuf.Timestamp
	11, // 11: generated.AppMongoResponse.prices:type_name -> generated.AppMongoResponse.PricesEntry
	8,  // 12: generated.SimilarAppsResponse.apps:type_name -> generated.SimilarAppResponse
	16, // 13: generated.AppElasticResponse.PricesEntry.value:type_name -> generated.Price
	16, // 14: generated.AppMongoResponse.PricesEntry.value:type_name -> generated.Price
	0,  // 15: generated.AppsService.Search:input_type -> generated.SearchAppsRequest
	3,  // 16: generated.AppsService.List:input_type -> generated.ListAppsRequest
	6,  // 17: generated.AppsService.Similar:input_type -> generated.ListSimilarAppsRequest
	1,  // 18: generated.AppsService.Search:output_type -> generated.AppsElasticResponse
	4,  // 19: generated.AppsService.List:output_type -> generated.AppsMongoResponse
	7,  // 20: generated.AppsService.Similar:output_type -> generated.SimilarAppsResponse
	18, // [18:21] is the sub-list for method output_type
	15, // [15:18] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_apps_proto_init() }
func file_apps_proto_init() {
	if File_apps_proto != nil {
		return
	}
	file_shared_proto_init()
	file_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_apps_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAppsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppsElasticResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppElasticResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppsMongoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMongoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSimilarAppsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimilarAppsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimilarAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apps_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apps_proto_goTypes,
		DependencyIndexes: file_apps_proto_depIdxs,
		MessageInfos:      file_apps_proto_msgTypes,
	}.Build()
	File_apps_proto = out.File
	file_apps_proto_rawDesc = nil
	file_apps_proto_goTypes = nil
	file_apps_proto_depIdxs = nil
}
